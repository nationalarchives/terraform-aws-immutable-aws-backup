{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "BackupServiceRoleName": {
      "Type": "String"
    },
    "BackupServiceRolePrincipals": {
      "Type": "List<String>",
      "Description": "List of principals that can assume the Backup Service Role in addition to the AWS Backup service."
    },
    "BackupServiceLinkedRoleArn": {
      "Type": "String"
    },
    "BackupVaultName": {
      "Type": "String"
    },
    "CentralAccountId": {
      "Type": "String",
      "Description": "The AWS Account ID of the central account."
    },
    "EventBusName": {
      "Type": "String"
    },
    "EventBridgeRuleName": {
      "Type": "String"
    },
    "KmsKeyId": {
      "Type": "String"
    },
    "DeploymentHelperTopicName": {
      "Type": "String",
      "Description": "Name of the central SNS topic used to trigger the deployment helper Lambda function."
    },
    "DeploymentHelperRoleArn": {
      "Type": "String",
      "Description": "ARN of the central deployment helper Lambda function role, used in the trust policy of the member account Deployment Helper role."
    },
    "DeploymentHelperRoleNamePrefix": {
      "Type": "String",
      "Description": "Prefix for the name of the role to create to be assumed in the member account by the deployment helper Lambda function, will be suffixed with the current region."
    },
    "PrimaryRegion": {
      "Type": "String",
      "Description": "One of the regions the stack is being deployed to, used to determine the global resources (e.g. IAM) will be created."
    },
    "RestoreVaultName": {
      "Type": "String"
    },
    "OrganizationId": {
      "Type": "String",
      "Description": "The ID of the AWS Organization to which this account belongs."
    },
    "ForceDeployment": {
      "Type": "String"
    }
  },
  "Conditions": {
    "CreateGlobalResources": {
      "Fn::Equals": [{ "Ref": "PrimaryRegion" }, { "Ref": "AWS::Region" }]
    }
  },
  "Resources": {
    "BackupServiceRole": {
      "Type": "AWS::IAM::Role",
      "Condition": "CreateGlobalResources",
      "Properties": {
        "RoleName": {
          "Ref": "BackupServiceRoleName"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["backup.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"],
              "Condition": {
                "StringEquals": {
                  "aws:SourceAccount": { "Ref": "AWS::AccountId" }
                }
              }
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": { "Ref": "BackupServiceRolePrincipals" }
              },
              "Action": ["sts:AssumeRole"],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": { "Ref": "OrganizationId" }
                }
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup",
          "arn:aws:iam::aws:policy/AWSBackupServiceRolePolicyForS3Backup"
        ],
        "Policies": [
          {
            "PolicyName": {
              "Ref": "BackupServiceRoleName"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "backup:UpdateRecoveryPointLifecycle",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "BackupServiceLinkedRole": {
      "Type": "Custom::AWS__IAM__ServiceLinkedRole",
      "Condition": "CreateGlobalResources",
      "Properties": {
        "ServiceToken": {
          "Fn::Sub": "arn:$${AWS::Partition}:sns:$${AWS::Region}:$${CentralAccountId}:$${DeploymentHelperTopicName}"
        },
        "ServiceTimeout": 120,
        "RoleArn": { "Fn::GetAtt": ["DeploymentHelperRole", "Arn"] },
        "AWSServiceName": "backup.amazonaws.com"
      }
    },
    "BackupVault": {
      "Type": "Custom::TerraformDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::Sub": "arn:$${AWS::Partition}:sns:$${AWS::Region}:$${CentralAccountId}:$${DeploymentHelperTopicName}"
        },
        "ServiceTimeout": 120,
        "RoleArn": { "Fn::GetAtt": ["DeploymentHelperRole", "Arn"] },
        "Code": "./terraform-stacks/AWS_Backup_BackupVault.tf",
        "TFVARS": {
          "BackupVaultName": {
            "Ref": "BackupVaultName"
          },
          "ForceDestroy": true,
          "EncryptionKeyArn": {
            "Fn::Sub": "arn:$${AWS::Partition}:kms:$${AWS::Region}:$${CentralAccountId}:key/$${KmsKeyId}"
          },
          "AccessPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*"
                },
                "Action": [
                  "backup:CopyIntoBackupVault",
                  "backup:DeleteBackupVault",
                  "backup:DeleteBackupVaultAccessPolicy",
                  "backup:DeleteBackupVaultLockConfiguration",
                  "backup:DeleteBackupVaultNotifications",
                  "backup:DeleteRecoveryPoint",
                  "backup:DisassociateBackupVaultMpaApprovalTeam",
                  "backup:PutBackupVaultAccessPolicy",
                  "backup:PutBackupVaultLockConfiguration",
                  "backup:PutBackupVaultNotifications",
                  "backup:StartBackupJob",
                  "backup:UpdateRecoveryPointLifecycle"
                ],
                "Resource": "*",
                "Condition": {
                  "ArnNotLike": {
                    "aws:PrincipalArn": [
                      { "Fn::GetAtt": ["DeploymentHelperRole", "Arn"] },
                      { "Fn::Sub": "arn:$${AWS::Partition}:iam::$${AWS::AccountId}:role/$${BackupServiceRoleName}" },
                      { "Fn::Sub": "arn:$${AWS::Partition}:iam::$${AWS::AccountId}:role/OrganizationAccountAccessRole" }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    },
    "DeploymentHelperRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": { "Fn::Sub": "$${DeploymentHelperRoleNamePrefix}$${AWS::Region}" },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": { "Ref": "DeploymentHelperRoleArn" }
              },
              "Action": ["sts:AssumeRole"],
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalOrgID": { "Ref": "OrganizationId" }
                }
              }
            }
          ]
        },
        "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AdministratorAccess"]
      }
    },
    "EventBridgeRole": {
      "Type": "AWS::IAM::Role",
      "Condition": "CreateGlobalResources",
      "Properties": {
        "RoleName": {
          "Ref": "EventBridgeRuleName"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["events.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"],
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": ${jsonencode(member_eventbridge_rule_arn_templates)}
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": { "Ref": "EventBridgeRuleName" },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": ["events:PutEvents"],
                  "Resource": {
                    "Fn::Sub": "arn:$${AWS::Partition}:events:*:$${CentralAccountId}:event-bus/$${EventBusName}"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "EventBridgeRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": { "Ref": "EventBridgeRuleName" },
        "EventPattern": {
          "source": ["aws.backup"],
          "detail-type": ["Backup Job State Change", "Copy Job State Change"],
          "detail": {
            "$or": [
              { "backupVaultName": [{ "Ref": "BackupVaultName" }] },
              { "sourceBackupVaultArn": ${jsonencode(central_backup_vault_arn_templates)} },
              { "destinationBackupVaultArn": ${jsonencode(central_backup_vault_arn_templates)} }
            ]
          }
        },
        "Targets": [
          {
            "Arn": {
              "Fn::Sub": "arn:$${AWS::Partition}:events:$${AWS::Region}:$${CentralAccountId}:event-bus/$${EventBusName}"
            },
            "Id": "SendToCentralBackupEventBus",
            "RoleArn": {
              "Fn::If": [
                "CreateGlobalResources",
                { "Fn::GetAtt": ["EventBridgeRole", "Arn"] },
                { "Fn::Sub": "arn:$${AWS::Partition}:iam::$${AWS::AccountId}:role/$${EventBridgeRuleName}" }
              ]
            }
          }
        ]
      }
    },
    "RestoreVault": {
      "Type": "Custom::TerraformDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::Sub": "arn:$${AWS::Partition}:sns:$${AWS::Region}:$${CentralAccountId}:$${DeploymentHelperTopicName}"
        },
        "ServiceTimeout": 120,
        "RoleArn": { "Fn::GetAtt": ["DeploymentHelperRole", "Arn"] },
        "Code": "./terraform-stacks/AWS_Backup_BackupVault.tf",
        "TFVARS": {
          "BackupVaultName": {
            "Ref": "RestoreVaultName"
          },
          "ForceDestroy": true,
          "AccessPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Deny",
                "Principal": {
                  "AWS": "*"
                },
                "Action": [
                  "backup:CopyIntoBackupVault",
                  "backup:DeleteBackupVault",
                  "backup:DeleteBackupVaultAccessPolicy",
                  "backup:DeleteBackupVaultLockConfiguration",
                  "backup:DeleteBackupVaultNotifications",
                  "backup:DeleteRecoveryPoint",
                  "backup:DisassociateBackupVaultMpaApprovalTeam",
                  "backup:PutBackupVaultAccessPolicy",
                  "backup:PutBackupVaultLockConfiguration",
                  "backup:PutBackupVaultNotifications",
                  "backup:StartBackupJob",
                  "backup:UpdateRecoveryPointLifecycle"
                ],
                "Resource": "*",
                "Condition": {
                  "ArnNotLike": {
                    "aws:PrincipalArn": [
                      { "Fn::GetAtt": ["DeploymentHelperRole", "Arn"] },
                      { "Fn::Sub": "arn:$${AWS::Partition}:iam::$${AWS::AccountId}:role/$${BackupServiceRoleName}" },
                      { "Fn::Sub": "arn:$${AWS::Partition}:iam::$${AWS::AccountId}:role/OrganizationAccountAccessRole" }
                    ]
                  }
                }
              }
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "CentralAccountBackupServiceLinkedRoleArn": {
      "Description": "ARN of the Backup Service-Linked Role in the central account.",
      "Value": { "Ref": "BackupServiceLinkedRoleArn" }
    }
  }
}
